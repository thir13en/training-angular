{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let ReplayControlValueChanges = /*#__PURE__*/(() => {\n  class ReplayControlValueChanges extends Observable {\n    constructor(control) {\n      super(subscriber => {\n        if (!control.valueChanges) {\n          throw new Error('Control does not have valueChanges');\n        }\n\n        control.valueChanges.pipe(startWith(control.value)).subscribe(subscriber);\n      });\n    }\n\n  }\n\n  ReplayControlValueChanges.ɵfac = function ReplayControlValueChanges_Factory(t) {\n    return new (t || ReplayControlValueChanges)(i0.ɵɵinject(i1.AbstractControl));\n  };\n\n  ReplayControlValueChanges.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReplayControlValueChanges,\n    factory: ReplayControlValueChanges.ɵfac,\n    providedIn: 'root'\n  });\n  return ReplayControlValueChanges;\n})();","map":null,"metadata":{},"sourceType":"module"}